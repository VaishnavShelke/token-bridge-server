name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Validate Maven project
      run: mvn validate
      
    - name: Compile project
      run: mvn compile
      
    - name: Run tests
      run: mvn test
      
    - name: Package application
      run: mvn package -DskipTests
      
    - name: Verify build artifacts
      run: |
        echo "Build completed successfully!"
        ls -la target/
        if [ -f target/monolith-0.0.1-SNAPSHOT.jar ]; then
          echo "✅ JAR file created successfully"
          echo "JAR size: $(du -h target/monolith-0.0.1-SNAPSHOT.jar | cut -f1)"
        else
          echo "❌ JAR file not found"
          exit 1
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar
        retention-days: 30
        
  # Optional: Add a code quality check job
  code-quality:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run Maven verify
      run: mvn verify
